[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "datatrev",
    "section": "",
    "text": "A creative data studio.\n\n\nData Visualizations, Explorations, Reporting, Dashboards, Scripts, you name it we do it!\nNo questions asked, no judgement passed. No job too small! Se habla español."
  },
  {
    "objectID": "index.html#affordable-data-solutions",
    "href": "index.html#affordable-data-solutions",
    "title": "datatrev",
    "section": "",
    "text": "Data Visualizations, Explorations, Reporting, Dashboards, Scripts, you name it we do it!\nNo questions asked, no judgement passed. No job too small! Se habla español."
  },
  {
    "objectID": "tidytuesday2024/tidy20.html",
    "href": "tidytuesday2024/tidy20.html",
    "title": "20",
    "section": "",
    "text": "In my first ever #tidytuesday we are taking a look at a coffee survey. I’ll make a note up front that I am prioritizing self education over analytical integrity here. Curiosity is in the drivers seat, so we are going to see where this takes us. Anything I present here is not intended to draw any conclusions or correlations (I tried, and any statistically sound correlation just wasn’t there with this data).",
    "crumbs": [
      "Tidy Tuesday 2024",
      "20"
    ]
  },
  {
    "objectID": "tidytuesday2024/tidy20.html#overview",
    "href": "tidytuesday2024/tidy20.html#overview",
    "title": "20",
    "section": "",
    "text": "In my first ever #tidytuesday we are taking a look at a coffee survey. I’ll make a note up front that I am prioritizing self education over analytical integrity here. Curiosity is in the drivers seat, so we are going to see where this takes us. Anything I present here is not intended to draw any conclusions or correlations (I tried, and any statistically sound correlation just wasn’t there with this data).",
    "crumbs": [
      "Tidy Tuesday 2024",
      "20"
    ]
  },
  {
    "objectID": "tidytuesday2024/tidy20.html#elt",
    "href": "tidytuesday2024/tidy20.html#elt",
    "title": "20",
    "section": "ELT",
    "text": "ELT\n\nLoad Up\nNothing crazy.\n\nlibrary(tidytuesdayR)\nlibrary(tidyverse)\nlibrary(RColorBrewer)\nlibrary(ggforce)\nlibrary(knitr)\nlibrary(kableExtra)\n\n\n\nTheme Setup\nCoffee Colors?\n\nbrew_colors &lt;- brewer.pal(n = 6, name = \"YlOrBr\")\n\ncoffee_theme &lt;- theme_minimal() +\n  theme(\n    plot.title = element_text(family = \"Hot Ink\", face = \"plain\", size = 26, color = brew_colors[1], hjust = 0.5),\n    axis.title.x = element_text(family = \"Fira Sans\", face = \"italic\", size = 12, color = brew_colors[1], margin = margin(t = 20, r = 20, b = 20, l = 20, unit = \"pt\")),\n    axis.title.y = element_text(family = \"Fira Sans\", face = \"italic\", size = 12, color = brew_colors[1], margin = margin(t = 20, r = 20, b = 20, l = 20, unit = \"pt\")),\n    axis.text.x = element_text(family = \"Fira Sans\", face = \"plain\", size = 10, color = brew_colors[2], angle = 45, hjust = 1),\n    axis.text.y = element_text(family = \"Fira Sans\", face = \"plain\", size = 10, color = brew_colors[2]),\n    legend.title = element_text(family = \"Fira Sans\", face = \"bold\", size = 12, color = brew_colors[1]),\n    legend.text = element_text(family = \"Fira Sans\", face = \"plain\", size = 10, color = brew_colors[2]),\n    plot.background = element_rect(fill = \"black\", color = NA),\n    panel.background = element_rect(fill = \"black\", color = NA),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    plot.margin = margin(t = 35, r = 10)\n  )\n\ntheme_set(coffee_theme)\n\n\n\nExtract\nI tried the tidytuesdayR::tt_load method and kept getting an error, so we url it.\n\ncoffee_survey &lt;- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-05-14/coffee_survey.csv', show_col_types = FALSE)\n\n\n\nTransform\nNice initial cleaning. I decided straight away that my analysis would not be considering open-response answers. I organized the rest of the columns into two categories: multiple response, and factored. Here I factor the latter group. Later I’ll decide what to do with the former.\nFinally I have the pleasure of correcting the “spend” column typo. People need to stop using “spend” as a noun. It is a verb. The noun is “expenditure”.\n\n# Trim out free-text data, fix \"spend\" typo \n# \"spend\" is not a noun, stop trying to make it one\nclean_tib &lt;- coffee_survey %&gt;%\n  select(-matches(\"other|specify|coffee_a|coffee_b|coffee_c|coffee_d|prefer\")) %&gt;%\n  rename(monthly_expenditure = total_spend) %&gt;%\n  mutate(across(everything(), ~ if(is.character(.)) tolower(.) else .)) %&gt;%\n  mutate(across(c(age, cups, favorite, style, strength, roast_level, caffeine,\n                  expertise, wfh, monthly_expenditure, taste, know_source,\n                  most_paid, most_willing, value_cafe, spent_equipment,\n                  value_equipment, gender, education_level, ethnicity_race,\n                  employment_status, number_children, political_affiliation\n                  ), as.factor\n                )\n         )",
    "crumbs": [
      "Tidy Tuesday 2024",
      "20"
    ]
  },
  {
    "objectID": "tidytuesday2024/tidy20.html#eda",
    "href": "tidytuesday2024/tidy20.html#eda",
    "title": "20",
    "section": "EDA",
    "text": "EDA\nI saw the multiple-response columns and decided to try to learn more about the best ways to handle these. I could make each cell a vector, turning the column into a list of character vectors, or I could try one-hot encoding. I brought in the caret library and played around with dummy variables enough to get a basic transformation of all the multiple-response columns into multiple single Boolean columns for each response.\nThis was messy and I didn’t love my function but it was enough to try some Chi Square/Cramérs V analysis comparing every column pair for possible correlation. I would love to have found ANY surprise coffee trend that correlated to personal data (like maybe all the cinnamon takers are all unemployed), but the highest Cramérs V value was .5 and nothing compelling. So I gave up before I started showing more bias than I had already in wanting to find something.\nI may clean that code up and include it later.\n\nStrip Columns\nBut for now I stripped out all of those multiple-response columns. This allowed me to drop all NA cells. These columns were the questions that many people seem to have just skipped, so stripping them saved more observations.\n\n# List of columns with multi-value cells\nhot_columns &lt;- c(\"where_drink\",\n                 \"brew\",\n                 \"purchase\",\n                 \"additions\",\n                 \"dairy\",\n                 \"sweetener\",\n                 \"why_drink\"\n                 )\n\n# Drop multi-value columns before dropping NA cells\nstrip_tib &lt;- clean_tib %&gt;%\n  select(-all_of(hot_columns)) %&gt;%\n  drop_na()\n\n\n\nFirst Plot\nI wanted to plot some kind of two-variable comparison anyway so I chose Age vs Cups per day, just to have a look.\n\n# Ordinal ordering\nage_levels = c(\"&lt;18 years old\", \"18-24 years old\", \"25-34 years old\",\n               \"35-44 years old\", \"45-54 years old\", \"55-64 years old\",\n               \"&gt;65 years old\")\ncups_levels = c(\"less than 1\", \"1\", \"2\", \"3\", \"4\", \"more than 4\")\n\nageVcups &lt;- strip_tib %&gt;% \n  select(age, cups) %&gt;% \n  mutate(\n    age = factor(age, levels = age_levels, ordered = TRUE),\n    cups = factor(cups, levels = cups_levels, ordered = TRUE)\n  )\n\nggplot(ageVcups, aes(x = age, fill = cups)) +\n  geom_bar(\n    position = \"fill\"\n    ) +\n  labs(\n    title = \"Cups of Coffee per Day by Age Group\",\n    x = \"Age Group\",\n    y = \"Percentage\",\n    fill = \"Number of Cups\"\n    ) +\n  scale_fill_brewer(\n    palette = \"YlOrBr\"\n    ) +\n  scale_y_continuous(\n    labels = ~ paste0(. * 100, \"%\")\n    ) +\n  theme(\n    legend.position = \"right\",\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  )\n\n\n\n\n\n\n\n\nNo considerable surprise that older age groups tend to show a greater proportion of higher cups-per-day.\n\n\nFinding Our Target\nWhat interested me is the self-reported coffee expertise. These questions are such a labyrinth of psychology I don’t know what analysts really use them for other than profiling over confidence maybe? I thought Dunning-Kruger did away with the presumed value of self-assessed expertise.\nWhat other question might be fun to compare to this self-expertise?\n“Do you know the source of your coffee”\nLets take a look. A jitter-box plot will show this nicely.\n\nexpertiseVknowsource_tib &lt;- strip_tib %&gt;%\n  select(expertise, know_source) %&gt;% \n    mutate(know_source = case_when(\n      tolower(know_source) == \"yes\" ~ \"Yes\",\n      tolower(know_source) == \"no\" ~ \"No\",\n      TRUE ~ know_source))\n\nevk_lite &lt;- expertiseVknowsource_tib %&gt;% \n  filter(!(know_source == \"No\" & expertise == 10))\n\nevk_hilite &lt;- expertiseVknowsource_tib %&gt;% \n  filter(know_source == \"No\" & expertise == 10)\n\np &lt;- ggplot(evk_lite, aes(\n    x = know_source, \n    y = as.numeric(expertise))\n  ) +\n  geom_boxplot(\n    data = expertiseVknowsource_tib,\n    outlier.shape = NA, \n    fill = \"brown\", \n    color = \"white\", \n    alpha = 0.25\n  ) +\n  geom_point(\n    data = evk_lite,\n    position = position_jitter(seed = 119, width = 0.12, height = 0.69),\n    color = \"tan\",\n    alpha = 0.25\n  ) +\n  geom_point(\n    data = evk_hilite,\n    position = position_jitter(seed = 119, width = 0.1, height = 0.69),\n    color = \"tan\",\n    alpha = 0.25\n  ) +\n  scale_y_continuous(\n    breaks = seq(0, 10, by = 1)\n  ) +\n  labs(\n    title = \"Do Coffee Experts Know Their Sources?\",\n    x = \"Do You Know Where Your Coffee Comes From?\",\n    y = \"Claimed Level of Coffee Expertise\"\n  ) +\n  theme(\n    legend.position = \"none\"\n  )\n\np",
    "crumbs": [
      "Tidy Tuesday 2024",
      "20"
    ]
  },
  {
    "objectID": "tidytuesday2024/tidy20.html#results",
    "href": "tidytuesday2024/tidy20.html#results",
    "title": "20",
    "section": "Results",
    "text": "Results\nNot too suprising. The more you claim to know about coffee the more likely you are to also claim to know where your coffee comes from.\nBut who are those four coffee geniuses who don’t care where their coffee comes from?\n\nhilite &lt;- expertiseVknowsource_tib %&gt;% \n  filter(know_source == \"No\" & expertise == 10)\n\n# set.seed(357)\n# jitter &lt;- position_jitter(width = 0.25, height = 0.5)\n\np_hilite &lt;- p +\n  geom_point(data = hilite, aes(\n    x = know_source, \n    y = as.numeric(expertise)),\n    position = position_jitter(seed = 119, width = 0.1, height = 0.69), \n    color = \"brown\",\n    alpha = .88\n    ) +\n  annotate(\n    \"text\",\n    x = .75,\n    y = 10,\n    label = \"EXPERTS\",\n    size = 2.5,\n    #fontface = \"italic\",\n    color = \"brown\"\n  )\n\np_hilite\n\n\n\n\n\n\n\n\n\nDrill Down\nI must know more about them\n\nexpVsource_outliers &lt;- strip_tib %&gt;%\n  mutate(expertise = as.integer(expertise)) %&gt;%\n  select(-submission_id) %&gt;% \n  filter(expertise == 10) %&gt;%\n  filter(str_detect(know_source, \"no\"))\n\n\nkable(expVsource_outliers, \"html\") %&gt;%\n  kable_styling() %&gt;%\n  row_spec(0, bold = TRUE, color = brew_colors[1], background = \"brown\") %&gt;%\n  row_spec(1:nrow(expVsource_outliers), color = brew_colors[6], background = brew_colors[1])\n\n\n\n\nage\ncups\nfavorite\nstyle\nstrength\nroast_level\ncaffeine\nexpertise\nwfh\nmonthly_expenditure\ntaste\nknow_source\nmost_paid\nmost_willing\nvalue_cafe\nspent_equipment\nvalue_equipment\ngender\neducation_level\nethnicity_race\nemployment_status\nnumber_children\npolitical_affiliation\n\n\n\n\n18-24 years old\n2\namericano\ncaramalized\nvery strong\nlight\nfull caffeine\n10\ni primarily work from home\n&lt;$20\nyes\nno\n$6-$8\n$4-$6\nyes\n$100-$300\nyes\nfemale\nbachelor's degree\nasian/pacific islander\nemployed full-time\nnone\nno affiliation\n\n\n25-34 years old\n1\nregular drip coffee\nchocolatey\nsomewhat strong\ndark\nfull caffeine\n10\ni primarily work from home\n$40-$60\nyes\nno\n$10-$15\n$15-$20\nyes\n$20-$50\nyes\nfemale\nbachelor's degree\nasian/pacific islander\nemployed full-time\nnone\nno affiliation\n\n\n18-24 years old\n1\nlatte\nchocolatey\nvery strong\nmedium\nfull caffeine\n10\ni primarily work in person\n$60-$80\nyes\nno\n$6-$8\n$6-$8\nyes\n$50-$100\nyes\nfemale\nbachelor's degree\nasian/pacific islander\nemployed full-time\nnone\nindependent\n\n\n25-34 years old\n1\npourover\nchocolatey\nsomewhat strong\ndark\nfull caffeine\n10\ni primarily work from home\n&lt;$20\nyes\nno\n$8-$10\n$10-$15\nyes\n$300-$500\nyes\nmale\nbachelor's degree\nwhite/caucasian\nemployed full-time\nnone\nindependent\n\n\n\n\n\n\n\n\n\nResponsible Analysis\nLet’s remind ourselves that we left sound analysis practices behind at this point. We are simply having fun. These are outliers and ZERO conclusions can be drawn from digging into their data. So lets just stop here.",
    "crumbs": [
      "Tidy Tuesday 2024",
      "20"
    ]
  },
  {
    "objectID": "datatrev.html",
    "href": "datatrev.html",
    "title": "datatrev",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "datatrev.html#quarto",
    "href": "datatrev.html#quarto",
    "title": "datatrev",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "tidytuesday2024/tidy21.html",
    "href": "tidytuesday2024/tidy21.html",
    "title": "21",
    "section": "",
    "text": "Second #tidytuesday. We are looking at emissions. Once again I am more interested in correlations than simply presenting totals with pretty shapes. This one left me with more questions than answers, but that is good too.",
    "crumbs": [
      "Tidy Tuesday 2024",
      "21"
    ]
  },
  {
    "objectID": "tidytuesday2024/tidy21.html#overview",
    "href": "tidytuesday2024/tidy21.html#overview",
    "title": "21",
    "section": "",
    "text": "Second #tidytuesday. We are looking at emissions. Once again I am more interested in correlations than simply presenting totals with pretty shapes. This one left me with more questions than answers, but that is good too.",
    "crumbs": [
      "Tidy Tuesday 2024",
      "21"
    ]
  },
  {
    "objectID": "tidytuesday2024/tidy21.html#set-up",
    "href": "tidytuesday2024/tidy21.html#set-up",
    "title": "21",
    "section": "Set Up",
    "text": "Set Up\n\nLibraries\nPaletteer is amazing for color palettes.\n\nlibrary(tidyverse)\nlibrary(tidytuesdayR)\nlibrary(here)\nlibrary(paletteer)\n\n\n\nImport Data\ntt_load worked this time.\n\nemissions &lt;- readRDS(here(\"tidytuesday2024\", \"tidy21\", \"emissions.rds\"))",
    "crumbs": [
      "Tidy Tuesday 2024",
      "21"
    ]
  },
  {
    "objectID": "tidytuesday2024/tidy21.html#theme",
    "href": "tidytuesday2024/tidy21.html#theme",
    "title": "21",
    "section": "Theme",
    "text": "Theme\nTrying some new theme structures. We’ll see if my system is sustainable.\n\n# ggplot theme\ntext_color &lt;- \"beige\"\nfill_color &lt;- \"#1f2d36\"\n\ntheme_set(theme_minimal(\n  base_family = \"Liberation Mono\", \n  base_size = 12))\n\ntheme_update(\n  panel.grid.major = element_blank(), \n  panel.grid.minor = element_blank(),\n  text = element_text(color = text_color),\n  axis.text = element_text(color = text_color),\n  strip.text = element_text(color = text_color),\n  axis.title.x = element_text(margin = margin(10, 0, 0, 0)),\n  axis.title.y = element_text(margin = margin(0, 10, 0, 0)),\n  plot.title = element_text(hjust = 0),\n  plot.title.position = \"plot\",\n  plot.background = element_rect(fill = fill_color, color = NA),\n  plot.margin = margin(rep(5, 4)),\n  panel.background = element_rect(fill = fill_color, color = NA),\n  legend.background = element_rect(fill = fill_color, color = NA),\n  legend.key = element_rect(fill = fill_color, color = NA),\n  strip.background = element_rect(fill = fill_color, color = NA)\n  )",
    "crumbs": [
      "Tidy Tuesday 2024",
      "21"
    ]
  },
  {
    "objectID": "tidytuesday2024/tidy21.html#eda",
    "href": "tidytuesday2024/tidy21.html#eda",
    "title": "21",
    "section": "EDA",
    "text": "EDA\n\nUnits\nThis whole data set relies on normalizing units across very different production industries. I wanted to start by assessing what these all were.\n\n# How many of each commodity?\nprods &lt;- emissions %&gt;% \n  group_by(commodity) %&gt;% \n  summarize(count = n()) %&gt;% \n  ungroup()\n\n# How many of each production unit?\nprod_units &lt;- emissions %&gt;% \n  group_by(production_unit) %&gt;% \n  summarize(count = n()) %&gt;% \n  ungroup()\n\n\n\nAre Emissions Rates Standardized?\nI want to check and see if each production unit has a standardized emissions conversion rate. We should see linearity in a production unit vs emissions scatter plot, grouped by units of production.\n\n# Is the relationship between each production_unit and total emissions linear?\nemissions_prodgrp &lt;- emissions %&gt;%\n  group_by(production_unit)\n\nggplot(\n  emissions_prodgrp, \n  aes(\n    x = production_value, \n    y = total_emissions_MtCO2e, \n    color = production_unit\n    )\n  ) +\n  geom_point() +\n  labs(\n    title = \"Emissions Rate by Production Unit\",\n    x = \"Total Emissions\",\n    y = \"Amount Produced\",\n    color = \"Production Unit\"\n    ) +\n  scale_colour_paletteer_d(\"LaCroixColoR::PeachPear\")\n\n\n\n\n\n\n\n\nAnd this is what we see, barring a few deviations.\nThis confirms that emissions are calculated based on standardized rates specific to each commodity. Which makes sense considering we have historical data going back earlier than greenhouse gasses were effectively measured.\n\n\nCalculate Rates\nNow we can calculate the actual rate for each commodity. This will give us the number used by Carbon Majors in normalizing each commodity to a common unit of emissions (MtCO2). We can plot this like a GCMS plot and see if there are any outliers or minor ridges.\n\n# What is the linear relationship between each production_unit wrt/ total_emissions?\nunit_slope &lt;- emissions %&gt;% \n  mutate(slope = total_emissions_MtCO2e/production_value) \n\n# What is the variance of this slope wrt/ each production_unit\nggplot(\n  unit_slope %&gt;% group_by(production_unit), \n  aes(\n    x = slope, \n    color = production_unit)\n  ) +\n  geom_freqpoly(binwidth = .01) +\n  labs(\n    title = \"Variance in Emissions Rate\",\n    x = \"Emissions Rate\",\n    y = \"Frequency\",\n    color = \"Production Unit\"\n    ) +\n  scale_colour_paletteer_d(\"LaCroixColoR::PeachPear\")\n\n\n\n\n\n\n\n\n\n\nCoal\nCoal seems to have a number of different conversion rates. My guess is that these vary based on the type of coal. We can group by commodity and show that in a histogram.\n\n# Closer look at \"Million tonnes/yr\"\nmtyr &lt;- unit_slope %&gt;% \n  filter(production_unit == \"Million tonnes/yr\")\n\nggplot(\n  mtyr %&gt;% group_by(commodity), \n  aes(x = slope, \n      fill = commodity)\n  ) +\n  geom_histogram(\n    color = \"beige\", \n    binwidth = .1\n    ) +\n  labs(\n    title = \"Coal Emission Rate Variance\",\n    x = \"Emissions Rate\",\n    y = \"Frequency\",\n    fill = \"Commodity\"\n    ) +\n  scale_fill_paletteer_d(\"LaCroixColoR::Pamplemousse\")\n\n\n\n\n\n\n\n\n\n\nCement\nCement is a bit different. It is one commodity. Grouping by Parent Company does not show a consistent correlation to the different rates.\n\n# Closer look at \"Million Tonnes CO2\"\nmtco2 &lt;- unit_slope %&gt;% \n  filter(production_unit == \"Million Tonnes CO2\")\n\nggplot(\n  mtco2 %&gt;% group_by(commodity), \n  aes(\n    x = slope, \n    fill = parent_entity)\n  ) +\n  geom_histogram(\n    color = \"beige\", \n    binwidth = .01\n    ) +\n  labs(\n    title = \"Cement Emissions Rate Variance\",\n    x = \"Emissions Rate\",\n    y = \"Frequency\",\n    fill = \"Parent Entity\"\n    ) +\n  scale_fill_paletteer_d(\"LaCroixColoR::Pamplemousse\")\n\n\n\n\n\n\n\n\nMy guess is that we may see the variance in emmisions rate of cement correlate with time.",
    "crumbs": [
      "Tidy Tuesday 2024",
      "21"
    ]
  },
  {
    "objectID": "tidytuesday2024/tidy21.html#results",
    "href": "tidytuesday2024/tidy21.html#results",
    "title": "21",
    "section": "Results",
    "text": "Results\n\n# Date correlation for cement slopes\nggplot(\n  mtco2, \n  aes(\n    x = year, \n    y = slope, \n    color = parent_entity)\n  ) +\n  geom_point() +\n  facet_wrap(~ parent_entity) +\n  labs(\n    title = \"Cement Emissions Rate Trend by Parent Entity\",\n    x = \"Cement Emissions Rate\",\n    y = \"Year\"\n    ) +\n  scale_x_continuous(\n    breaks = seq(1930, max(mtco2$year), by = 30)) +\n  scale_color_paletteer_d(\"tvthemes::Opal\") +\n  theme(\n    axis.text.x = element_text(angle = 90, hjust = 1),\n    legend.position = \"none\",\n    panel.border = element_rect(\n      color = \"beige\", \n      fill = NA, linewidth = 1)\n  )\n\n\n\n\n\n\n\n\nAnd that is precisely what we see.\nWith one major exception…\nChina Cement’s emissions rate has not changed since 1929. Carbon Majors does not provide an explanation for why this number has increased over time for the other five Parent Entities. Nor do they explain why China’s has stayed the same.\nIt appears the standard rate of emissions from cement production was established around 1970 (Taiheiyo Cement) and was steadily upgraded each year. I am assuming this was done by a governing body to which China does not ascribe. The question I am left with is this: Has the actual rate of emissions produced by cement production increased, or simply the rate agreed upon by the scientific community to use in calculating it? If the latter is the case, why has historical data not been recalculated. If the former is the case, why has cement production gotten worse in terms of emissions? And how has China’s rate remained flat while that of all the other Parent Entities steadily increased at the EXACT same rate?",
    "crumbs": [
      "Tidy Tuesday 2024",
      "21"
    ]
  },
  {
    "objectID": "tidytuesday2024/tidy22.html#overview",
    "href": "tidytuesday2024/tidy22.html#overview",
    "title": "22",
    "section": "Overview",
    "text": "Overview\nLet’s dig in to #tidytuesday number three for me."
  },
  {
    "objectID": "tidytuesday2024/tidy22.html#set-up",
    "href": "tidytuesday2024/tidy22.html#set-up",
    "title": "22",
    "section": "Set Up",
    "text": "Set Up\n\nLibraries\n\nlibrary(tidyverse)\nlibrary(tidytuesdayR)\nlibrary(here)\nlibrary(scales)\nlibrary(paletteer)\n\n\n\nImport Data\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, week = 22)\n\n\nharvest_2020 &lt;- tuesdata$harvest_2020\nharvest_2021 &lt;- tuesdata$harvest_2021\nplanting_2020 &lt;- tuesdata$planting_2020\nplanting_2021 &lt;- tuesdata$planting_2021\nspending_2020 &lt;- tuesdata$spending_2020\nspending_2021 &lt;- tuesdata$spending_2021"
  },
  {
    "objectID": "tidytuesday2024/tidy22.html#theme",
    "href": "tidytuesday2024/tidy22.html#theme",
    "title": "22",
    "section": "Theme",
    "text": "Theme\n\nColors\n\ntext_color &lt;- \"beige\"\nfill_color &lt;- \"#1f2d36\"\n\nbrown &lt;- \"#896C4CFF\"\npalette &lt;- paletteer::paletteer_d(\"ggsci::default_jama\")\npalette_green18 &lt;- paletteer::paletteer_c(\"ggthemes::Temperature Diverging\", n = 18)\npalette_green25 &lt;- paletteer::paletteer_c(\"ggthemes::Temperature Diverging\", n = 25)\n\n\n\nScript Theme\n\ntheme_set(theme_minimal(\n  base_family = \"Liberation Mono\", \n  base_size = 12))\n\ntheme_update(\n  panel.grid.major = element_blank(), \n  panel.grid.minor = element_blank(),\n  text = element_text(color = text_color),\n  axis.text = element_text(color = text_color),\n  strip.text = element_text(color = text_color),\n  axis.title.x = element_text(margin = margin(10, 0, 0, 0)),\n  axis.title.y = element_text(margin = margin(0, 10, 0, 0)),\n  plot.title = element_text(hjust = 0),\n  plot.title.position = \"plot\",\n  plot.background = element_rect(fill = fill_color, color = NA),\n  plot.margin = margin(rep(10, 4)),\n  panel.background = element_rect(fill = fill_color, color = NA),\n  legend.background = element_rect(fill = fill_color, color = NA),\n  legend.key = element_rect(fill = fill_color, color = NA),\n  strip.background = element_rect(fill = fill_color, color = NA)\n)"
  },
  {
    "objectID": "tidytuesday2024/tidy22.html#eda",
    "href": "tidytuesday2024/tidy22.html#eda",
    "title": "22",
    "section": "EDA",
    "text": "EDA\n\nYield 2020\n\nh20_weight &lt;- harvest_2020 %&gt;% \n  group_by(vegetable) %&gt;% \n  summarize(total_weight = sum(weight)) %&gt;% \n  ungroup() %&gt;% \n  filter(vegetable != \"strawberries\")\n\np20_seeds &lt;- planting_2020 %&gt;% \n  group_by(vegetable) %&gt;% \n  summarize(total_seeds = sum(number_seeds_planted)) %&gt;% \n  ungroup() %&gt;% \n  filter(vegetable != \"strawberries\")\n\nyield20 &lt;- p20_seeds %&gt;% \n  inner_join(h20_weight, by = \"vegetable\") %&gt;% \n  mutate(yield = total_weight/total_seeds)\n\n\n\nYield 2020 Plot\n\nggplot(data = yield20) +\n  geom_bar(\n    aes(\n      x = reorder(vegetable, -total_seeds), \n      y = total_weight, \n      fill = vegetable\n      ),\n    stat = \"identity\"\n    ) +\n  geom_bar(\n    aes(x = vegetable, y = -total_seeds * 100),\n    stat = \"identity\",\n    fill = brown\n    ) +\n  scale_y_continuous(\n    limits = c(-60000, 180000)\n    ) +\n  geom_text(\n    aes(\n      x = reorder(vegetable, -total_seeds), \n      y = total_weight, \n      label = round(total_weight / 1000, 1),\n      color = vegetable\n      ),\n    vjust = .5,\n    hjust = -.25,\n    angle = 90\n    ) +\n  geom_text(\n    aes(\n      x = reorder(vegetable, -total_seeds), \n      y = -total_seeds * 100, \n      label = round(total_seeds, 1)\n      ),\n    color = brown,\n    vjust = .5,\n    hjust = 1.5,\n    angle = 90\n    ) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = \"How Many Seeds Does it Take?\",\n    subtitle = \"2020\"\n    ) +\n  annotate(\n    \"text\", \n    x = -Inf, \n    y = 0, \n    label = \"Total Seeds Planted | Total Weight Yield (kg)\",\n    color = \"beige\",\n    angle = 90,\n    hjust = .47,\n    vjust = -1\n    ) +\n  theme(\n    axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0.5),\n    axis.text.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    plot.margin = margin(10, 10, 10, 30),\n    legend.position=\"none\"\n  ) +\n  scale_fill_manual(values = palette_green25) +\n  scale_color_manual(values = palette_green25)\n\n\n\n\n\n\n\n\n\n\nYield 2021\n\nh21_weight &lt;- harvest_2021 %&gt;% \n  group_by(vegetable) %&gt;% \n  summarize(total_weight = sum(weight)) %&gt;% \n  ungroup() %&gt;% \n  filter(vegetable != \"strawberries\")\n\np21_seeds &lt;- planting_2021 %&gt;% \n  group_by(vegetable) %&gt;% \n  summarize(total_seeds = sum(number_seeds_planted)) %&gt;% \n  ungroup() %&gt;% \n  filter(vegetable != \"strawberries\")\n\nyield21 &lt;- p21_seeds %&gt;% \n  inner_join(h21_weight, by = \"vegetable\") %&gt;% \n  mutate(yield = total_weight/total_seeds)\n\n\n\nYield 2021 Plot\n\nggplot(data = yield21) +\n  geom_bar(\n    aes(\n      x = reorder(vegetable, -total_seeds), \n      y = total_weight, \n      fill = vegetable\n    ),\n    stat = \"identity\"\n  ) +\n  geom_bar(\n    aes(x = vegetable, y = -total_seeds * 100),\n    stat = \"identity\",\n    fill = brown\n  ) +\n  scale_y_continuous(\n    limits = c(-60000, 180000)\n  ) +\n  geom_text(\n    aes(\n      x = reorder(vegetable, -total_seeds), \n      y = total_weight, \n      label = round(total_weight / 1000, 1),\n      color = vegetable\n    ),\n    vjust = .5,\n    hjust = -.25,\n    angle = 90\n  ) +\n  geom_text(\n    aes(\n      x = reorder(vegetable, -total_seeds), \n      y = -total_seeds * 100, \n      label = round(total_seeds, 1)\n    ),\n    color = brown,\n    vjust = .5,\n    hjust = 1.5,\n    angle = 90\n  ) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title = \"How Many Seeds Does It Take?\",\n    subtitle = \"2021\"\n  ) +\n  annotate(\n    \"text\", \n    x = -Inf, \n    y = 0, \n    label = \"Total Seeds Planted | Total Weight Yield (kg)\",\n    color = \"beige\",\n    angle = 90,\n    hjust = .47,\n    vjust = -1\n    ) +\n  theme(\n    axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0.5),\n    axis.text.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    plot.margin = margin(10, 10, 10, 30),\n    legend.position=\"none\"\n  ) +\n  scale_fill_manual(values = palette_green25) +\n  scale_color_manual(values = palette_green25)"
  },
  {
    "objectID": "tidytuesday2024/tidy22.html#results",
    "href": "tidytuesday2024/tidy22.html#results",
    "title": "22",
    "section": "Results",
    "text": "Results\n\nYields Change\n\nyields &lt;- inner_join(\n  yield20, \n  yield21, \n  by = \"vegetable\", \n  suffix = c(\".20\", \".21\")\n  ) %&gt;% \n  group_by(vegetable) %&gt;% \n  ungroup() %&gt;% \n  mutate(\n    change_yield = (yield.21 - yield.20) / yield.20\n  )\n\n\n\nYield Change Plot\n\nggplot(\n  data = yields,\n  aes(\n    x = reorder(vegetable, -change_yield), \n    y = change_yield,\n    fill = vegetable,\n    )\n  ) +\n  geom_bar(stat = \"identity\") +\n  scale_y_continuous(\n    labels = scales::percent,\n    breaks = seq(-1, 5, by = 2)\n    ) +\n  labs(\n    title = \"Difference in Yield\",\n    subtitle = \"2020 v 2021\",\n    y = \"Percent Change\"\n    ) +\n  theme(\n    panel.grid.major.y = element_line(color = text_color, linewidth = 0.05),\n    legend.position = \"none\",\n    axis.text.x = element_text(\n      angle = 90, \n      hjust = 1, \n      vjust = .5),\n    axis.title.x = element_blank()\n    ) +\n  scale_fill_manual(values = palette_green18)"
  },
  {
    "objectID": "tidytuesday2024/tidy22.html#analysis",
    "href": "tidytuesday2024/tidy22.html#analysis",
    "title": "22",
    "section": "Analysis",
    "text": "Analysis"
  }
]