# datatrev custom theme

library(RColorBrewer)
library(ggplot2)

# Define variables

# Define the path to save the custom theme
save_path <- here("tidytuesday2024/tidy21/tidy21_theme.RData")

# Generate a Brewer palette
palette_name <- "BrBG"  # You can change this to any Brewer palette name
num_colors <- 11
colors <- brewer.pal(num_colors, palette_name)

# Create a data frame to use for plotting
color_data <- data.frame(
  x = 1:num_colors,
  y = rep(1, num_colors),
  color = colors
)

# Plot the colors
ggplot(color_data, aes(x = factor(x), y = y, fill = factor(x))) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = colors) +
  theme_void() +
  theme(legend.position = "none") +
  labs(title = paste("Colors from Brewer Palette:", palette_name))

# General theme settings
line_color <- colors[5]
line_width <- 1
rect_fill <- colors[11]
rect_color <- NA
rect_width <- 1
text_size <- 12
text_color <- colors[5]
title_face <- "bold"
title_size <- 14
aspect_ratio_value <- 1

# Axis settings
axis_ticks_length <- unit(0.2, "cm")
axis_minor_ticks_length <- unit(0.1, "cm")

# Legend settings
legend_bg_fill <- colors[7]
legend_bg_color <- NA
legend_margin <- margin(6, 6, 6, 6)
legend_spacing <- unit(0.5, "cm")
legend_key_fill <- colors[7]
legend_key_color <-NA
legend_key_size <- unit(1.2, "lines")
legend_key_spacing <- unit(0.5, "cm")
legend_frame_color <- NA
legend_ticks_color <- NA
legend_ticks_length <- unit(0.2, "cm")
legend_axis_line_color <- NA
legend_position_value <- "bottom"
legend_direction_value <- "horizontal"
legend_byrow_value <- FALSE
legend_justification_value <- "center"
legend_location_value <- "panel"
legend_box_value <- "vertical"
legend_box_margin <- margin(6, 6, 6, 6)
legend_box_bg_fill <- NA
legend_box_bg_color <- NA
legend_box_spacing <- unit(0.5, "cm")

# Panel settings
panel_bg_fill <- colors[11]
panel_bg_color <- NA
panel_bg_width <- 1
panel_border_color <- NA
panel_border_width <- NA
panel_spacing <- unit(0.5, "cm")
panel_grid_color <- NA
panel_grid_width <- NA
panel_ontop_value <- FALSE

# Plot settings
plot_bg_fill <- colors[11]
plot_bg_color <- NA
plot_bg_width <- 1
plot_title_size <- 14
plot_title_color <- colors[5]
plot_title_hjust <- 0.5
plot_subtitle_size <- 10
plot_subtitle_color <- colors[5]
plot_subtitle_hjust <- 0.5
plot_caption_size <- 8
plot_caption_color <- colors[5]
plot_caption_hjust <- 1
plot_tag_size <- 10
plot_tag_color <- colors[5]
plot_tag_hjust <- 0
plot_margin <- margin(1, 1, 1, 1, "cm")

# Strip settings
strip_bg_fill <- colors[6]
strip_bg_color <- NA
strip_bg_width <- 1
strip_clip_value <- "inherit"
strip_placement_value <- "inside"
strip_switch_pad_grid <- unit(0.2, "cm")
strip_switch_pad_wrap <- unit(0.2, "cm")

# Complete and validate
complete_value <- TRUE
validate_value <- TRUE

# Define the custom theme
custom_theme <- theme(
  line = element_line(color = line_color, linewidth = line_width),
  rect = element_rect(fill = rect_fill, color = rect_color, linewidth = line_width),
  text = element_text(size = text_size, color = text_color),
  title = element_text(face = title_face, size = title_size),
  aspect.ratio = aspect_ratio_value,
  axis.ticks.length = axis_ticks_length,
  axis.minor.ticks.length = axis_minor_ticks_length,
  legend.background = element_rect(fill = legend_bg_fill, color = legend_bg_color, linewidth = line_width),
  legend.margin = legend_margin,
  legend.spacing = legend_spacing,
  legend.key = element_rect(fill = legend_key_fill, color = legend_key_color, linewidth = line_width),
  legend.key.size = legend_key_size,
  legend.key.spacing = legend_key_spacing,
  legend.frame = element_rect(color = legend_frame_color, linewidth = line_width),
  legend.ticks = element_line(color = legend_ticks_color, linewidth = line_width),
  legend.ticks.length = legend_ticks_length,
  legend.axis.line = element_line(color = legend_axis_line_color, linewidth = line_width),
  legend.position = legend_position_value,
  legend.direction = legend_direction_value,
  legend.byrow = legend_byrow_value,
  legend.justification = legend_justification_value,
  legend.location = legend_location_value,
  legend.box = legend_box_value,
  legend.box.margin = legend_box_margin,
  legend.box.background = element_rect(fill = legend_box_bg_fill, color = legend_box_bg_color, linewidth = line_width),
  legend.box.spacing = legend_box_spacing,
  panel.background = element_rect(fill = panel_bg_fill, color = panel_bg_color, linewidth = line_width),
  panel.border = element_rect(color = panel_border_color, linewidth = line_width),
  panel.spacing = panel_spacing,
  panel.grid = element_line(color = panel_grid_color, linewidth = line_width),
  panel.ontop = panel_ontop_value,
  plot.background = element_rect(fill = plot_bg_fill, color = plot_bg_color, linewidth = line_width),
  plot.title = element_text(size = plot_title_size, color = plot_title_color, hjust = plot_title_hjust),
  plot.title.position = "panel",
  plot.subtitle = element_text(size = plot_subtitle_size, color = plot_subtitle_color, hjust = plot_subtitle_hjust),
  plot.caption = element_text(size = plot_caption_size, color = plot_caption_color, hjust = plot_caption_hjust),
  plot.caption.position = "panel",
  plot.tag = element_text(size = plot_tag_size, color = plot_tag_color, hjust = plot_tag_hjust),
  plot.tag.position = "topleft",
  plot.tag.location = "panel",
  plot.margin = plot_margin,
  strip.background = element_rect(fill = strip_bg_fill, color = strip_bg_color, linewidth = line_width),
  strip.clip = strip_clip_value,
  strip.placement = strip_placement_value,
  strip.switch.pad.grid = strip_switch_pad_grid,
  strip.switch.pad.wrap = strip_switch_pad_wrap,
  complete = complete_value,
  validate = validate_value
)

save(custom_theme, file = save_path)